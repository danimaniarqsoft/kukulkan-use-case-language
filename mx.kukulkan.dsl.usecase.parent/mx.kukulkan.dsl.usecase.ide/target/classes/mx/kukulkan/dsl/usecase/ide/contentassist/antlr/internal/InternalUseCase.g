/*
 * generated by Xtext 2.16.0
 */
grammar InternalUseCase;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package mx.kukulkan.dsl.usecase.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mx.kukulkan.dsl.usecase.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mx.kukulkan.dsl.usecase.services.UseCaseGrammarAccess;

}
@parser::members {
	private UseCaseGrammarAccess grammarAccess;

	public void setGrammarAccess(UseCaseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRequirementsUseCaseModel
entryRuleRequirementsUseCaseModel
:
{ before(grammarAccess.getRequirementsUseCaseModelRule()); }
	 ruleRequirementsUseCaseModel
{ after(grammarAccess.getRequirementsUseCaseModelRule()); } 
	 EOF 
;

// Rule RequirementsUseCaseModel
ruleRequirementsUseCaseModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getGroup()); }
		(rule__RequirementsUseCaseModel__Group__0)
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcept
entryRuleConcept
:
{ before(grammarAccess.getConceptRule()); }
	 ruleConcept
{ after(grammarAccess.getConceptRule()); } 
	 EOF 
;

// Rule Concept
ruleConcept 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConceptAccess().getGroup()); }
		(rule__Concept__Group__0)
		{ after(grammarAccess.getConceptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseCase
entryRuleUseCase
:
{ before(grammarAccess.getUseCaseRule()); }
	 ruleUseCase
{ after(grammarAccess.getUseCaseRule()); } 
	 EOF 
;

// Rule UseCase
ruleUseCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUseCaseAccess().getGroup()); }
		(rule__UseCase__Group__0)
		{ after(grammarAccess.getUseCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseCaseFlow
entryRuleUseCaseFlow
:
{ before(grammarAccess.getUseCaseFlowRule()); }
	 ruleUseCaseFlow
{ after(grammarAccess.getUseCaseFlowRule()); } 
	 EOF 
;

// Rule UseCaseFlow
ruleUseCaseFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUseCaseFlowAccess().getGroup()); }
		(rule__UseCaseFlow__Group__0)
		{ after(grammarAccess.getUseCaseFlowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompleteActionBlock
entryRuleCompleteActionBlock
:
{ before(grammarAccess.getCompleteActionBlockRule()); }
	 ruleCompleteActionBlock
{ after(grammarAccess.getCompleteActionBlockRule()); } 
	 EOF 
;

// Rule CompleteActionBlock
ruleCompleteActionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompleteActionBlockAccess().getGroup()); }
		(rule__CompleteActionBlock__Group__0)
		{ after(grammarAccess.getCompleteActionBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUserActionBlock
entryRuleUserActionBlock
:
{ before(grammarAccess.getUserActionBlockRule()); }
	 ruleUserActionBlock
{ after(grammarAccess.getUserActionBlockRule()); } 
	 EOF 
;

// Rule UserActionBlock
ruleUserActionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserActionBlockAccess().getUserActionBlockKeyword()); }
		'UserActionBlock'
		{ after(grammarAccess.getUserActionBlockAccess().getUserActionBlockKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystemActionBlock
entryRuleSystemActionBlock
:
{ before(grammarAccess.getSystemActionBlockRule()); }
	 ruleSystemActionBlock
{ after(grammarAccess.getSystemActionBlockRule()); } 
	 EOF 
;

// Rule SystemActionBlock
ruleSystemActionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemActionBlockAccess().getGroup()); }
		(rule__SystemActionBlock__Group__0)
		{ after(grammarAccess.getSystemActionBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementsUseCaseModel__Group__0__Impl
	rule__RequirementsUseCaseModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getActorsAssignment_0()); }
		(rule__RequirementsUseCaseModel__ActorsAssignment_0)
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getActorsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getActorsAssignment_0()); }
		(rule__RequirementsUseCaseModel__ActorsAssignment_0)*
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getActorsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementsUseCaseModel__Group__1__Impl
	rule__RequirementsUseCaseModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementsUseCaseModelAccess().getDataAssignment_1()); }
	(rule__RequirementsUseCaseModel__DataAssignment_1)*
	{ after(grammarAccess.getRequirementsUseCaseModelAccess().getDataAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementsUseCaseModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getUsecasesAssignment_2()); }
		(rule__RequirementsUseCaseModel__UsecasesAssignment_2)
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getUsecasesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getUsecasesAssignment_2()); }
		(rule__RequirementsUseCaseModel__UsecasesAssignment_2)*
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getUsecasesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }
	'Actor:'
	{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
	(rule__Actor__NameAssignment_1)
	{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getDescriptionAssignment_2()); }
	(rule__Actor__DescriptionAssignment_2)?
	{ after(grammarAccess.getActorAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concept__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concept__Group__0__Impl
	rule__Concept__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConceptAccess().getDataConceptKeyword_0()); }
	'DataConcept:'
	{ after(grammarAccess.getConceptAccess().getDataConceptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concept__Group__1__Impl
	rule__Concept__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConceptAccess().getNameAssignment_1()); }
	(rule__Concept__NameAssignment_1)
	{ after(grammarAccess.getConceptAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concept__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConceptAccess().getConceptDescriptionAssignment_2()); }
	(rule__Concept__ConceptDescriptionAssignment_2)?
	{ after(grammarAccess.getConceptAccess().getConceptDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__0__Impl
	rule__UseCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getUseCaseKeyword_0()); }
	'UseCase:'
	{ after(grammarAccess.getUseCaseAccess().getUseCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__1__Impl
	rule__UseCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getNameAssignment_1()); }
	(rule__UseCase__NameAssignment_1)
	{ after(grammarAccess.getUseCaseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__2__Impl
	rule__UseCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getUseCaseNameAssignment_2()); }
	(rule__UseCase__UseCaseNameAssignment_2)?
	{ after(grammarAccess.getUseCaseAccess().getUseCaseNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__3__Impl
	rule__UseCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getActorsAssignment_3()); }
	(rule__UseCase__ActorsAssignment_3)*
	{ after(grammarAccess.getUseCaseAccess().getActorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__4__Impl
	rule__UseCase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getConceptsAssignment_4()); }
	(rule__UseCase__ConceptsAssignment_4)*
	{ after(grammarAccess.getUseCaseAccess().getConceptsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getUseCasesFlowAssignment_5()); }
	(rule__UseCase__UseCasesFlowAssignment_5)*
	{ after(grammarAccess.getUseCaseAccess().getUseCasesFlowAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseFlow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCaseFlow__Group__0__Impl
	rule__UseCaseFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseFlow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseFlowAccess().getUseCaseFlowKeyword_0()); }
	'UseCaseFlow:'
	{ after(grammarAccess.getUseCaseFlowAccess().getUseCaseFlowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseFlow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCaseFlow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseFlow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseFlowAccess().getCompleteActionsBlockAssignment_1()); }
	(rule__UseCaseFlow__CompleteActionsBlockAssignment_1)*
	{ after(grammarAccess.getUseCaseFlowAccess().getCompleteActionsBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompleteActionBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteActionBlock__Group__0__Impl
	rule__CompleteActionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteActionBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteActionBlockAccess().getCompleteActionBlockKeyword_0()); }
	'CompleteActionBlock:'
	{ after(grammarAccess.getCompleteActionBlockAccess().getCompleteActionBlockKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteActionBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteActionBlock__Group__1__Impl
	rule__CompleteActionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteActionBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteActionBlockAccess().getUserActionsBlockAssignment_1()); }
	(rule__CompleteActionBlock__UserActionsBlockAssignment_1)*
	{ after(grammarAccess.getCompleteActionBlockAccess().getUserActionsBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteActionBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteActionBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteActionBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteActionBlockAccess().getSystemActionsBlockAssignment_2()); }
	(rule__CompleteActionBlock__SystemActionsBlockAssignment_2)*
	{ after(grammarAccess.getCompleteActionBlockAccess().getSystemActionsBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemActionBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemActionBlock__Group__0__Impl
	rule__SystemActionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemActionBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemActionBlockAccess().getSystemActionBlockKeyword_0()); }
	'SystemActionBlock:'
	{ after(grammarAccess.getSystemActionBlockAccess().getSystemActionBlockKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemActionBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemActionBlock__Group__1__Impl
	rule__SystemActionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemActionBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemActionBlockAccess().getNameAssignment_1()); }
	(rule__SystemActionBlock__NameAssignment_1)
	{ after(grammarAccess.getSystemActionBlockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemActionBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemActionBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemActionBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemActionBlockAccess().getDescriptionAssignment_2()); }
	(rule__SystemActionBlock__DescriptionAssignment_2)?
	{ after(grammarAccess.getSystemActionBlockAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementsUseCaseModel__ActorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getActorsActorParserRuleCall_0_0()); }
		ruleActor
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getActorsActorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__DataAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getDataConceptParserRuleCall_1_0()); }
		ruleConcept
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getDataConceptParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementsUseCaseModel__UsecasesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementsUseCaseModelAccess().getUsecasesUseCaseParserRuleCall_2_0()); }
		ruleUseCase
		{ after(grammarAccess.getRequirementsUseCaseModelAccess().getUsecasesUseCaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getActorAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConceptAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConceptAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__ConceptDescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConceptAccess().getConceptDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConceptAccess().getConceptDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUseCaseAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__UseCaseNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getUseCaseNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getUseCaseAccess().getUseCaseNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__ActorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getActorsActorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getUseCaseAccess().getActorsActorIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUseCaseAccess().getActorsActorIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getUseCaseAccess().getActorsActorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__ConceptsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getConceptsConceptCrossReference_4_0()); }
		(
			{ before(grammarAccess.getUseCaseAccess().getConceptsConceptIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUseCaseAccess().getConceptsConceptIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getUseCaseAccess().getConceptsConceptCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__UseCasesFlowAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getUseCasesFlowUseCaseFlowParserRuleCall_5_0()); }
		ruleUseCaseFlow
		{ after(grammarAccess.getUseCaseAccess().getUseCasesFlowUseCaseFlowParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseFlow__CompleteActionsBlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseFlowAccess().getCompleteActionsBlockCompleteActionBlockParserRuleCall_1_0()); }
		ruleCompleteActionBlock
		{ after(grammarAccess.getUseCaseFlowAccess().getCompleteActionsBlockCompleteActionBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteActionBlock__UserActionsBlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompleteActionBlockAccess().getUserActionsBlockUserActionBlockParserRuleCall_1_0()); }
		ruleUserActionBlock
		{ after(grammarAccess.getCompleteActionBlockAccess().getUserActionsBlockUserActionBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteActionBlock__SystemActionsBlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompleteActionBlockAccess().getSystemActionsBlockSystemActionBlockParserRuleCall_2_0()); }
		ruleSystemActionBlock
		{ after(grammarAccess.getCompleteActionBlockAccess().getSystemActionsBlockSystemActionBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemActionBlock__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemActionBlockAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSystemActionBlockAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemActionBlock__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemActionBlockAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSystemActionBlockAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
